{"ast":null,"code":"var _jsxFileName = \"D:\\\\Growth Pro_Project\\\\frontend\\\\src\\\\app.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport BusinessForm from './components/BusinessForm'; // Corrected import path\nimport BusinessDisplayCard from './components/BusinessDisplayCard'; // Corrected import path\n\n// Main App component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  // State for form inputs\n  const [businessName, setBusinessName] = useState('');\n  const [location, setLocation] = useState('');\n\n  // State for displayed business data\n  const [businessData, setBusinessData] = useState(null);\n\n  // State for loading indicators\n  const [isLoadingData, setIsLoadingData] = useState(false);\n  const [isRegeneratingHeadline, setIsRegeneratingHeadline] = useState(false);\n\n  // State for error messages\n  const [error, setError] = useState('');\n\n  // Base URL for the backend API\n  const API_BASE_URL = 'http://localhost:3001'; // Ensure this matches your backend port\n\n  // Handle form submission\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError(''); // Clear previous errors\n\n    if (!businessName.trim() || !location.trim()) {\n      setError('Please enter both business name and location.');\n      return;\n    }\n    setIsLoadingData(true); // Show loading spinner\n    setBusinessData(null); // Clear previous data\n\n    try {\n      const response = await fetch(`${API_BASE_URL}/business-data`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: businessName,\n          location: location\n        })\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.message || 'Failed to fetch business data.');\n      }\n      const data = await response.json();\n      setBusinessData(data);\n    } catch (err) {\n      console.error('Error fetching business data:', err);\n      setError(err.message || 'An unexpected error occurred. Please try again.');\n    } finally {\n      setIsLoadingData(false); // Hide loading spinner\n    }\n  };\n\n  // Handle headline regeneration\n  const handleRegenerateHeadline = async () => {\n    setError(''); // Clear previous errors\n    setIsRegeneratingHeadline(true); // Show loading spinner\n\n    try {\n      const response = await fetch(`${API_BASE_URL}/regenerate-headline?name=${encodeURIComponent(businessName)}&location=${encodeURIComponent(location)}`);\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.message || 'Failed to regenerate headline.');\n      }\n      const data = await response.json();\n      setBusinessData(prevData => ({\n        ...prevData,\n        seoHeadline: data.seoHeadline\n      }));\n    } catch (err) {\n      console.error('Error regenerating headline:', err);\n      setError(err.message || 'An unexpected error occurred while regenerating headline.');\n    } finally {\n      setIsRegeneratingHeadline(false); // Hide loading spinner\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 flex items-center justify-center p-4 font-inter\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-8 rounded-xl shadow-2xl w-full max-w-md border border-gray-200\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-3xl font-bold text-center text-gray-800 mb-8\",\n        children: \"Local Business Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(BusinessForm, {\n        businessName: businessName,\n        setBusinessName: setBusinessName,\n        location: location,\n        setLocation: setLocation,\n        handleSubmit: handleSubmit,\n        isLoadingData: isLoadingData,\n        error: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), businessData && /*#__PURE__*/_jsxDEV(BusinessDisplayCard, {\n        businessData: businessData,\n        handleRegenerateHeadline: handleRegenerateHeadline,\n        isRegeneratingHeadline: isRegeneratingHeadline\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"tVCWNfvY7UcsfLXqOKMihCOaqA8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","BusinessForm","BusinessDisplayCard","jsxDEV","_jsxDEV","App","_s","businessName","setBusinessName","location","setLocation","businessData","setBusinessData","isLoadingData","setIsLoadingData","isRegeneratingHeadline","setIsRegeneratingHeadline","error","setError","API_BASE_URL","handleSubmit","e","preventDefault","trim","response","fetch","method","headers","body","JSON","stringify","name","ok","errorData","json","Error","message","data","err","console","handleRegenerateHeadline","encodeURIComponent","prevData","seoHeadline","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Growth Pro_Project/frontend/src/app.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport BusinessForm from './components/BusinessForm'; // Corrected import path\r\nimport BusinessDisplayCard from './components/BusinessDisplayCard'; // Corrected import path\r\n\r\n// Main App component\r\nconst App = () => {\r\n    // State for form inputs\r\n    const [businessName, setBusinessName] = useState('');\r\n    const [location, setLocation] = useState('');\r\n\r\n    // State for displayed business data\r\n    const [businessData, setBusinessData] = useState(null);\r\n\r\n    // State for loading indicators\r\n    const [isLoadingData, setIsLoadingData] = useState(false);\r\n    const [isRegeneratingHeadline, setIsRegeneratingHeadline] = useState(false);\r\n\r\n    // State for error messages\r\n    const [error, setError] = useState('');\r\n\r\n    // Base URL for the backend API\r\n    const API_BASE_URL = 'http://localhost:3001'; // Ensure this matches your backend port\r\n\r\n    // Handle form submission\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setError(''); // Clear previous errors\r\n\r\n        if (!businessName.trim() || !location.trim()) {\r\n            setError('Please enter both business name and location.');\r\n            return;\r\n        }\r\n\r\n        setIsLoadingData(true); // Show loading spinner\r\n        setBusinessData(null); // Clear previous data\r\n\r\n        try {\r\n            const response = await fetch(`${API_BASE_URL}/business-data`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({ name: businessName, location: location }),\r\n            });\r\n\r\n            if (!response.ok) {\r\n                const errorData = await response.json();\r\n                throw new Error(errorData.message || 'Failed to fetch business data.');\r\n            }\r\n\r\n            const data = await response.json();\r\n            setBusinessData(data);\r\n        } catch (err) {\r\n            console.error('Error fetching business data:', err);\r\n            setError(err.message || 'An unexpected error occurred. Please try again.');\r\n        } finally {\r\n            setIsLoadingData(false); // Hide loading spinner\r\n        }\r\n    };\r\n\r\n    // Handle headline regeneration\r\n    const handleRegenerateHeadline = async () => {\r\n        setError(''); // Clear previous errors\r\n        setIsRegeneratingHeadline(true); // Show loading spinner\r\n\r\n        try {\r\n            const response = await fetch(`${API_BASE_URL}/regenerate-headline?name=${encodeURIComponent(businessName)}&location=${encodeURIComponent(location)}`);\r\n\r\n            if (!response.ok) {\r\n                const errorData = await response.json();\r\n                throw new Error(errorData.message || 'Failed to regenerate headline.');\r\n            }\r\n\r\n            const data = await response.json();\r\n            setBusinessData(prevData => ({\r\n                ...prevData,\r\n                seoHeadline: data.seoHeadline,\r\n            }));\r\n        } catch (err) {\r\n            console.error('Error regenerating headline:', err);\r\n            setError(err.message || 'An unexpected error occurred while regenerating headline.');\r\n        } finally {\r\n            setIsRegeneratingHeadline(false); // Hide loading spinner\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 flex items-center justify-center p-4 font-inter\">\r\n            <div className=\"bg-white p-8 rounded-xl shadow-2xl w-full max-w-md border border-gray-200\">\r\n                <h1 className=\"text-3xl font-bold text-center text-gray-800 mb-8\">\r\n                    Local Business Dashboard\r\n                </h1>\r\n\r\n                {/* Input Form Component */}\r\n                <BusinessForm\r\n                    businessName={businessName}\r\n                    setBusinessName={setBusinessName}\r\n                    location={location}\r\n                    setLocation={setLocation}\r\n                    handleSubmit={handleSubmit}\r\n                    isLoadingData={isLoadingData}\r\n                    error={error}\r\n                />\r\n\r\n                {/* Display Card Component */}\r\n                {businessData && (\r\n                    <BusinessDisplayCard\r\n                        businessData={businessData}\r\n                        handleRegenerateHeadline={handleRegenerateHeadline}\r\n                        isRegeneratingHeadline={isRegeneratingHeadline}\r\n                    />\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}